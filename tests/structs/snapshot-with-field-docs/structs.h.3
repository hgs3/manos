.TH "MY PROJECT" "3"
.SH NAME
structs.h \- record tests
.\" --------------------------------------------------------------------------
.SH SYNOPSIS
.nf
.B #include <structs.h>
.fi
.\" --------------------------------------------------------------------------
.SH DESCRIPTION
In computer science, a record (also called a structure, struct, or compound data) is a basic data structure.
Records in a database or spreadsheet are usually called "rows".
.PP
A record is a collection of fields, possibly of different data types, typically in a fixed number and sequence.
The fields of a record may also be called members, particularly in object-oriented programming; fields may also be called elements, though this risks confusion with the elements of a collection.
.PP
For example, a date could be stored as a record containing a numeric year field, a month field represented as a string, and a numeric day-of-month field.
A personnel record might contain a name, a salary, and a rank.
A Circle record might contain a center and a radiusâ€”in this instance, the center itself might be represented as a point record containing x and y coordinates.
.\" -------------------------------------
.SS The Empty structure
An empty, do nothing structure.
.PP
.in +4n
.EX
struct Empty {
};
.EE
.in
.PP
This structure has not contents.
.PP
What does it mean to be devoid of content?
This is a philosophical question.
.PP
The fields in the
.I Empty
structure are as follows:
.\" -------------------------------------
.SS The Frob structure
Structure with one field.
.PP
.in +4n
.EX
struct Frob {
    const void *nop;
};
.EE
.in
.PP
This structure has one field.
It doesn't do much otherwise.
It is generally recommended to prefer the \f[I]struct Foo\f[R] structure as it's more modern.
.PP
The fields in the
.I Frob
structure are as follows:
.TP
.I nop
Useless field.
.\" -------------------------------------
.SS The Person structure
Represents a human.
.PP
.in +4n
.EX
struct Person {
    int age;
    struct Height height;
    char fullname_delimited_by_spaces[64];
};
.EE
.in
.PP
The fields in the
.I Person
structure are as follows:
.TP
.I age
How many years old the person is.
.TP
.I height
The persons height.
.TP
.I fullname_delimited_by_spaces
Full name of the person.
.\" -------------------------------------
.SS The Foo structure
Nested structures.
.PP
.in +4n
.EX
struct Foo {
    int ***waldo[];
    const struct Foo::@0::Qux qux;
    struct Foo::@0 bar;
};
.EE
.in
.PP
This structure has substructres which define fields on their parent structure.
This structure is better than the \f[I]struct Frob\f[R] one.
.PP
The fields in the
.I Foo
structure are as follows:
.TP
.I waldo
Waldo field docs.
.TP
.I bar
Bar field docs.
